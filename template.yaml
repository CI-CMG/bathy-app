AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  bathy-app

  SAM Template for Autogrid 2.0

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Handler: app.lambda_handler
    Runtime: python3.9
    Environment:
      Variables:
        LOGLEVEL: DEBUG

Resources:
  AutogridApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: "Autogrid API"
      Tags:
        project: "bathymetry"
      CorsConfiguration:
        AllowOrigins:
          - "*"
        AllowHeaders:
          - "*"
        AllowMethods:
          - GET
          - POST
          - OPTIONS

  #
  # Functions
  #
  CreateOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create_order/
      Role: arn:aws:iam::282856304593:role/csb-pilot-role
      Description: "create a new order"
      Tags:
        project: "bathymetry"
      Timeout: 3
      Handler: app.lambda_handler
      Events:
        bathy:
          Type: HttpApi
          Properties:
            ApiId: !Ref AutogridApi
            Path: /order
            Method: post

  OrderStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: order_status/
      Role: arn:aws:iam::282856304593:role/csb-pilot-role
      Description: "report on the status of given order"
      Tags:
        project: "bathymetry"
      Events:
        csb:
          Type: HttpApi
          Properties:
            ApiId: !Ref AutogridApi
            Path: /order/{proxy+}
            Method: get

#  MultibeamCatalogFunction:
#      Type: AWS::Serverless::Function
#      Properties:
#        CodeUri: multibeam_catalog_query/
#        Role: arn:aws:iam::282856304593:role/csb-pilot-role
#        Description: "placeholder which mocks the querying of MB catalog"
#        Tags:
#          project: "csb-pilot"
#        Environment:
#          Variables:
#            MY_AWS_REGION: !Ref AWS::Region
#        Events:
#          multibeamCatalogQueryEvent:
#            Type: SQS
#            Properties:
#              Queue: !GetAtt MultibeamCatalogQueue.Arn
#              Enabled: true

  DatasetErrorHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dataset_error_handler/
      Role: arn:aws:iam::282856304593:role/csb-pilot-role
      Description: "handle errors in the dataset-specific section of StepFunction"
      Tags:
        project: "csb-pilot"

  FormatPointQueryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: format_point_query/
      Role: arn:aws:iam::282856304593:role/csb-pilot-role
      Description: "construct the SQL used by Athena to extract CSB points"
      Tags:
        project: "csb-pilot"

  InitializeOrderRecordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: insert_order_record/
      Role: arn:aws:iam::282856304593:role/csb-pilot-role
      Description: "insert a new order record into DynamoDB"
      Tags:
        project: "csb-pilot"

  StageCsbDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stage_csb_data/
      Role: arn:aws:iam::282856304593:role/csb-pilot-role
      Description: "mock the staging of Athena query results data on the EC2 instance"
      Tags:
        project: "csb-pilot"
      Events:
        stageCsbDataEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt StageCsbDataQueue.Arn
            Enabled: true

  StageMultibeamDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stage_multibeam_data/
      Role: arn:aws:iam::282856304593:role/csb-pilot-role
      Description: "mock the staging of multibeam data on the EC2 instance"
      Tags:
        project: "csb-pilot"
      Events:
        stageMultibeamDataEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt StageMultibeamDataQueue.Arn
            Enabled: true

  UpdateDatasetRecordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update_dataset_record/
      Role: arn:aws:iam::282856304593:role/csb-pilot-role
      Description: "update the status of the dataset in order tracking table"
      Tags:
        project: "csb-pilot"

  VerifyDatasetStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: verify_dataset_status/
      Role: arn:aws:iam::282856304593:role/csb-pilot-role
      Description: "verify all datasets in order are staged and ready for processing or delivery"
      Tags:
        project: "csb-pilot"

  #
  # State Machine
  #
  BathymetryStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/bathy_order_processor.asl.json
      Role: arn:aws:iam::282856304593:role/csb-pilot-role
      DefinitionSubstitutions:
        MultibeamCatalogQueueUrl: !Ref MultibeamCatalogQueue
        StageCsbDataQueueUrl: !Ref StageCsbDataQueue
        StageMultibeamDataQueueUrl: !Ref StageMultibeamDataQueue
        OrderNotificationQueueUrl: !Ref OrderNotificationQueue
        GridDataQueueUrl: !Ref GridDataQueue
        UpdateDatasetRecordFunctionArn: !GetAtt UpdateDatasetRecordFunction.Arn
        StageMultibeamDataFunctionArn: !GetAtt StageMultibeamDataFunction.Arn
        StageCsbDataFunctionArn: !GetAtt StageCsbDataFunction.Arn
        InitializeOrderRecordFunctionArn: !GetAtt InitializeOrderRecordFunction.Arn
        FormatPointQueryFunctionArn: !GetAtt FormatPointQueryFunction.Arn
        DatasetErrorHandlerFunctionArn: !GetAtt DatasetErrorHandlerFunction.Arn
#        MultibeamCatalogFunctionArn: !GetAtt MultibeamCatalogFunction.Arn
        VerifyDatasetStatusFunctionArn: !GetAtt VerifyDatasetStatusFunction.Arn
        AthenaOutputBucket: "s3://csb-pilot-delivery/"


  #
  # Queues
  #
  MultibeamCatalogQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: MultibeamCatalogQueue
      Tags:
        - Key: project
          Value: "csb-pilot"

  StageCsbDataQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: StageCsbDataQueue
      Tags:
        - Key: project
          Value: "csb-pilot"

  StageMultibeamDataQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: StageMultibeamDataQueue
      Tags:
        - Key: project
          Value: "csb-pilot"

  OrderNotificationQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: OrderNotificationQueue
      Tags:
        - Key: project
          Value: "csb-pilot"

  GridDataQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: GridDataQueue
      Tags:
        - Key: project
          Value: "csb-pilot"


Outputs:
  AutogridApiUrl:
    Description: "API endpoint for orders"
    Value: !Sub "${AutogridApi.ApiEndpoint}/order/"
